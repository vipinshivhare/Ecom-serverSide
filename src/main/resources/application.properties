# # MySQL Configuration
# spring.datasource.url=jdbc:mysql://localhost:3306/ecomdb
# spring.datasource.username=root
# spring.datasource.password=rootroot
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# cloudinary.url=${CLOUDINARY_URL}
# cloudinary.cloud_name=dgwfrstao
# cloudinary.api_key=411189745534467
# cloudinary.api_secret=CjANlLjFPN2pRPGnP64PaT2bjNI 




# === MySQL Configuration ===

# === PostgreSQL Configuration (Primary: Render Env, Fallback: Local) ===
# spring.datasource.url=${DB_URL:jdbc:postgresql://ep-tiny-band-a8vnmyo4-pooler.eastus2.azure.neon.tech:5432/neondb?sslmode=require}
# spring.datasource.username=${DB_USERNAME:neondb_owner}
# spring.datasource.password=${DB_PASSWORD:npg_Vra0eLqhBfy1}
# spring.datasource.driver-class-name=org.postgresql.Driver

# # === JPA / Hibernate ===
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.open-in-view=false


# # === Cloudinary Configuration (Fallback for Local Dev) ===
# cloudinary.url=${CLOUDINARY_URL:cloudinary://411189745534467:CjANlLjFPN2pRPGnP64PaT2bjNI@dgwfrstao}
# cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME:dgwfrstao}
# cloudinary.api_key=${CLOUDINARY_API_KEY:411189745534467}
# cloudinary.api_secret=${CLOUDINARY_API_SECRET:CjANlLjFPN2pRPGnP64PaT2bjNI}

# # === Server Port for Render (optional) ===
# server.port=10000





# === PostgreSQL Configuration (Environment-based only) ===
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# === Hibernate / JPA ===
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false

# === Cloudinary Configuration (Environment-based only) ===
cloudinary.url=${CLOUDINARY_URL}
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}

# === Server Port (Render specific) ===
server.port=10000
